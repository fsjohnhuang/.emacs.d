#+startup: showall

kill ring
mark ring(标记环)
search ring(查找环，实际上是队列)

* 查找

** 增量查找
功能：边输入查找内容边匹配，并且配对内容高亮显示

正向查找： ~isearch-forward(C-s)~
反向查找： ~isearch-backward(C-r)~
定位到下一个、上一个匹配项：在按回车前， ~C-s~ 和 ~C-r~
光标位置加入mark ring：回车，mini buffer显示Mark saved where search started。特点如下：
1) 那么后续查找即以该位置作为起点，下一次回车前取消查找即光标回到该位置
2) 可通过 ~C-u C-@~ 回到上一个加入到mark ring的搜索位置

查找内容会加入到search ring中，在查找区可执行如下操作：
~M-n~ 和 ~M-p~ ，从search ring中提取查询内容
~isearch-complete~ ，从search ring中自动补全
~M-c~ ，大小写敏感切换，默认为大小写敏感
~C-M-w~ ，删除查询内容的最后一个字符
~C-M-y~ ，将光标当前字符复制到查找内容的末尾
~M-e~ ，将光标定位到查找内容末尾，然后按 ~C-f~ 即将原来光标所在位置作为起始位置，复制到查找内容末尾，并向后移动一个字符。可不断通过按 ~C-f~ 复制后续所有字符到查找区
~C-j~ ，在查找区内输入回车
~M-y~ ,将kill ring的内容复制到查询区

** 词组增量查找
功能：匹配时忽略符号(句号、逗号、斜杠、换行符等)，如输入com rob可以匹配到com/rob或com;;rob等内容

正向查找： ~isearch-forward-word(M-s w)~
反向查找： ~isearch-backward-word~

** 正则增量查找
正向查找： ~isearch-forward-regexp~
反向查找： ~isearch-backward-regexp~

** 替换

*** 全文替换
~replace-string RET <old-string> RET <new-string> RET~
~replace-regexp RET <old-regexp> RET <new-string> RET~

*** 查找替换
~M-%~ + ~<old-string> RET <new-string> RET~ ，从光标位置向前查找逐一询问替换
| 输入     | 响应                            |
|----------+---------------------------------|
| SPC 或 y | 替换并跳转到下一个匹配项        |
| DEL 或 n | 跳转到下一个匹配项              |
| .        | 替换后退出                      |
| ,        | 替换，再按y才跳转到下一个匹配项 |
| !        | 替换后面所有匹配项              |
| ^        | 回到第一个匹配项                |
| RET 或 q | 退出                            |

按其他键时会退出替换模式，按 ~C-x ESC ESC RET~ 就会恢复到刚才的替换模式

**** 递归编辑模式
在查找替换模式下，希望临时退出去编辑文本，再恢复原来的查找替换模式，可使用递归编辑模式
| 输入  | 响应                                                                  |
|-------+-----------------------------------------------------------------------|
| C-r   | 进入递归编辑模式，mode line中的模式名外面加了层[]表示处于递归编辑模式 |
| C-M-c | 返回查找模式                                                          |
| C-]   | 退出递归编辑模式和查找模式                                            |
| C-w   | 删除当前匹配项并进入递归编辑模式                                      |

** Ref
https://www.cnblogs.com/robertzml/archive/2010/03/03/1675870.html
